/*
 * Copyright (C) 2019 by the splitter contributors
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 3 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

plugins {
    id 'idea'
    id 'java'
    id "org.sonarqube" version "2.7.1"
    id 'com.gradle.build-scan' version '2.4.2'
}


apply from: "$rootDir/integration-test.gradle"

version = '1.0.0-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'http://nexus.onebusaway.org/nexus/content/repositories/public/' }
}

dependencies {
    implementation 'com.google.protobuf:protobuf-java:3.9.1'
    implementation 'crosby.binary:osmpbf:1.3.4'
    implementation 'it.unimi.dsi:fastutil:8.3.0'
    implementation 'org.ogce:xpp3:1.1.6'


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
    testImplementation 'junit:junit:4.12'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.5.2'


    integrationTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    integrationTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

jar {
    manifest {
        attributes 'Main-Class': 'uk.me.parabola.splitter.Main'
    }
}

task fatJar(type: Jar) {
    description = 'Generates a JAR with depdendencies included'
    manifest {
        attributes 'Main-Class': 'uk.me.parabola.splitter.Main'
    }
    archiveAppendix = 'with-dependencies'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

test {
    useJUnitPlatform()
}

integrationTest {
    useJUnitPlatform()
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'

    publishAlways()
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'openstreetmap-splitter'
    }
}

build.dependsOn fatJar
